.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gettingstarted_gallery_auto_examples_analysis_plot_pca_spec.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gettingstarted_gallery_auto_examples_analysis_plot_pca_spec.py:


NDDataset PCA analysis example
-------------------------------
In this example, we perform the PCA dimensionality reduction of a spectra
dataset


.. code-block:: default


    import spectrochempy as scp








Load a dataset


.. code-block:: default


    dataset = scp.read_omnic("irdata/nh4y-activation.spg")
    print(dataset)
    dataset.plot_stack()




.. image:: /gettingstarted/gallery/auto_examples/analysis/images/sphx_glr_plot_pca_spec_001.png
    :alt: plot pca spec
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    NDDataset: [float64] a.u. (shape: (y:55, x:5549))

    <_AxesSubplot:xlabel='wavenumbers $\\mathrm{/\\ \\mathrm{cm}^{-1}}$', ylabel='absorbance $\\mathrm{/\\ \\mathrm{a.u.}}$'>



Create a PCA object


.. code-block:: default

    pca = scp.PCA(dataset, centered=False)








Reduce the dataset to a lower dimensionality (number of
components is automatically determined)


.. code-block:: default


    S, LT = pca.reduce(n_pc=0.99)

    print(LT)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    NDDataset: [float64] a.u. (shape: (y:2, x:5549))




Finally, display the results graphically
ScreePlot


.. code-block:: default

    _ = pca.screeplot()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /gettingstarted/gallery/auto_examples/analysis/images/sphx_glr_plot_pca_spec_002.png
          :alt: Scree plot
          :class: sphx-glr-multi-img

    *

      .. image:: /gettingstarted/gallery/auto_examples/analysis/images/sphx_glr_plot_pca_spec_003.png
          :alt: plot pca spec
          :class: sphx-glr-multi-img





Score Plot


.. code-block:: default

    _ = pca.scoreplot(1, 2)




.. image:: /gettingstarted/gallery/auto_examples/analysis/images/sphx_glr_plot_pca_spec_004.png
    :alt: Score plot
    :class: sphx-glr-single-img





Score Plot for 3 PC's in 3D


.. code-block:: default

    _ = pca.scoreplot(1, 2, 3)




.. image:: /gettingstarted/gallery/auto_examples/analysis/images/sphx_glr_plot_pca_spec_005.png
    :alt: Score plot
    :class: sphx-glr-single-img





Displays the 4-first loadings


.. code-block:: default


    LT[:4].plot_stack()

    # scp.show()  # uncomment to show plot if needed (not necessary in jupyter notebook)



.. image:: /gettingstarted/gallery/auto_examples/analysis/images/sphx_glr_plot_pca_spec_006.png
    :alt: plot pca spec
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <_AxesSubplot:xlabel='wavenumbers $\\mathrm{/\\ \\mathrm{cm}^{-1}}$', ylabel='loadings (L^T) of nh4y-activation $\\mathrm{/\\ \\mathrm{a.u.}}$'>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.831 seconds)


.. _sphx_glr_download_gettingstarted_gallery_auto_examples_analysis_plot_pca_spec.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pca_spec.py <plot_pca_spec.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pca_spec.ipynb <plot_pca_spec.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
